name: Build Go Project and Create Release
on:
    push:
        branches: [release]

permissions:
    contents: write

jobs:
    build_and_release:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [macos-latest, ubuntu-20.04, windows-latest]

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Go
              uses: actions/setup-go@v2
              with:
                  go-version: "1.20.x"

            - name: Linux
              if: matrix.os == 'ubuntu-20.04'
              run: |
                  go build -o tgpt-linux-amd64
                  GOARCH=386 go build -o tgpt-linux-i386
                  GOARCH=arm64 go build -o tgpt-linux-arm64

            - name: MacOS
              if: matrix.os == 'macos-latest'
              run: |
                  GOARCH=amd64 go build -o tgpt-mac-amd64
                  GOARCH=arm64 go build -o tgpt-mac-arm64

            - name: Windows
              if: matrix.os == 'windows-latest'
              run: |
                  go build -o tgpt-amd64.exe
                  setx GOARCH 386
                  go build -o tgpt-i386.exe

            - name: Upload Artifacts
              id: upload-artifacts
              uses: softprops/action-gh-release@v1
              with:
                  files: |
                      tgpt-linux-amd64
                      tgpt-linux-i386
                      tgpt-linux-arm64
                      tgpt-amd64.exe
                      tgpt-i386.exe
                      tgpt-mac-amd64
                      tgpt-mac-arm64
                  token: ${{ secrets.GITHUB_TOKEN }}
                  draft: true
                  tag_name: v
                  name: tgpt